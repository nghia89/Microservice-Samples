version: '3.8'

services:

  # databse section
  sample.basketdb:
    image: redis:alpine
    container_name: sample.basketdb
    restart: always
    ports:
      - "6379:6379"

  sample.elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.2
    container_name: sample.elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - xpack.security.enabled=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - ELASTIC_USERNAME=elastic #default username
      - ELASTIC_PASSWORD=admin
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "product:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  #productdb: mysql
  productdb:
    image: mysql:8.0.29
    container_name: productdb
    environment:
      MYSQL_ROOT_PASSWORD: "Passw0rd!"
    restart: always
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
  # end database

  # infrastructure section
  sample.basket.api:
    image: ${DOCKER_REGISTRY-}sample-basket-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Basket.Api/Dockerfile
    container_name: sample.basket.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - sample.basketdb
    ports:
      - "6200:80"
    restart: always

# end infrastructure 


# network 
networks:
  default:
    name: microservice_sample
    driver: bridge

# end network


#volumes section
volumes:
  mysql_data:
    name: mysql_data
  elasticsearch_data:
    name: elasticsearch_data
